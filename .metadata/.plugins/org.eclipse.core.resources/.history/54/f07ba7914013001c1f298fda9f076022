package com.berker.servicebase.configuration;

import java.util.Date;
import java.util.List;

import org.apache.http.HttpResponse;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.lang.Nullable;
import org.springframework.util.CollectionUtils;
import org.springframework.web.HttpMediaTypeNotSupportedException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.ServletWebRequest;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
import org.springframework.web.util.WebUtils;

import com.berker.servicebase.dto.ExceptionResponseModel;
import com.berker.servicebase.exceptions.DataNotFoundException;

@ControllerAdvice
public class ExceptionHandle extends ResponseEntityExceptionHandler {

	@ExceptionHandler({ DataNotFoundException.class })
	protected ResponseEntity<Object> handleHttpMediaTypeNotSupported(DataNotFoundException ex, HttpHeaders headers,
			HttpStatus status, WebRequest request) {
		ExceptionResponseModel response = new ExceptionResponseModel(ex.getMessage(), ex.getTimeStamp());
		return new ResponseEntity(response, HttpStatus.NOT_FOUND);

		return handleExceptionInternal(ex, null, headers, status, request);
	}

	@Override
	protected ResponseEntity<Object> handleExceptionInternal(Exception ex, @Nullable Object body, HttpHeaders headers,
			HttpStatus status, WebRequest request) {
		
		ExceptionResponseModel response = new ExceptionResponseModel(ex.getMessage(), new Date());
		
		return new ResponseEntity<>(response, status);
	}

}
